%ul.list--pipe
  - current_roles.fetch('GovernmentIncumbency', []).each do |role|
    = render 'current_role', role: role, role_type: "#{t('.government_role').capitalize}", role_title: "#{role.government_position.name}"

  - current_roles.fetch('OppositionIncumbency', []).each do |role|
    = render 'current_role', role: role, role_type: "#{t('.opposition_role').capitalize}", role_title: "#{role.opposition_position.name}"

  - current_roles.fetch('SeatIncumbency', []).each do |role|
    - if role.class == GroupingHelper::GroupedObject
      - first_line_start = t('.mp_for')
      - first_line_end = "#{link_to role.nodes[0].constituency.name, constituency_path(role.nodes[0].constituency.graph_id)}".html_safe
      - first_line = "#{first_line_start} #{first_line_end}".html_safe
      = render 'current_role', role: role, role_type: "#{t('.parliamentary_role').capitalize}", role_title: first_line
    - else
      - first_line_start = t('.mp_for')
      - first_line_end = "#{link_to role.constituency.name, constituency_path(role.constituency.graph_id)}".html_safe
      - first_line = "#{first_line_start} #{first_line_end}".html_safe
      = render 'current_role', role: role, role_type: "#{t('.parliamentary_role').capitalize}", role_title: first_line

  - current_roles.fetch('HouseIncumbency', []).each do |role|
    = render 'current_role', role: role, role_type: "#{t('.house_of_lords_role')}", role_title: "#{t('member').capitalize} #{t('of_the')} #{t('house_of_lords')}"

  - current_roles.fetch('FormalBodyMembership', []).each do |role|
    = render 'current_role', role: role, role_type: "#{t('.committee_role').capitalize}", role_title: "#{t('member').capitalize} #{t('of_the')} #{role.formal_body.name}"
